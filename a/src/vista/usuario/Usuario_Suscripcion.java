package vista.usuario;

import controlador.GestionClientes;
import java.time.LocalDate;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import modelo.ErrorUI;
import modelo.Suscripcion;

public class Usuario_Suscripcion extends javax.swing.JFrame implements ErrorUI {

    private final JFrame principal;
    private final double precioBasica = 8.99;
    private final double precioEstandar = 11.99;
    private final double precioPremium = 15.99;

    /**
     * Creates new form Sacar
     *
     * @param v
     */
    public Usuario_Suscripcion(JFrame v) {
        initComponents();
        principal = v;
        principal.setVisible(false);
        this.setVisible(true);
        Suscripcion s = Usuario.usuarioLogueado.getSuscripcion();

        if ((cooldownCambiarSuscripcion())) {
            cbSuscripcion.setEnabled(false);
            cbSuscripcion.setSelectedIndex(Usuario.usuarioLogueado.getSuscripcion().getTipoSuscripcion());

        } else {
            cbSuscripcion.setEnabled(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        botonSuscripcion = new javax.swing.JButton();
        botonSaldo = new javax.swing.JButton();
        tfSaldo = new javax.swing.JTextField();
        labelError = new javax.swing.JLabel();
        cbSuscripcion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sacar");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Impact", 0, 20)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(204, 0, 0));
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("SUSCRIPCIÓN");

        botonSuscripcion.setText("ACEPTAR PLAN");
        botonSuscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSuscripcionActionPerformed(evt);
            }
        });

        botonSaldo.setText("AÑADIR SALDO");
        botonSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSaldoActionPerformed(evt);
            }
        });

        labelError.setForeground(new java.awt.Color(204, 0, 0));
        labelError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelError.setText("jLabel1");

        cbSuscripcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Suscripción Básica", "Suscripción Estándar", "Suscripción Premium" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSuscripcion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonSuscripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(botonSaldo))
                    .addComponent(labelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(105, 105, 105))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonSaldo)
                    .addComponent(tfSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(cbSuscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonSuscripcion)
                    .addComponent(labelError))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        setSize(new java.awt.Dimension(616, 326));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        principal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed


    private void botonSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSaldoActionPerformed

        if (!(tfSaldo.getText().isEmpty())) {
            //Sumar la cantidad introducida al saldo del cliente
            Usuario.usuarioLogueado.getTarjeta().setSaldo(Usuario.usuarioLogueado.getTarjeta().getSaldo() + Double.parseDouble(tfSaldo.getText()));
            MostrarError(labelError, "Saldo añadido, ahora dispone de " + Usuario.usuarioLogueado.getTarjeta().getSaldo() + " €");
            //Guardar cambios.
            GestionClientes.guardarClientes();
        } else {
            MostrarError(labelError, "Introduzca la cantidad de saldo a añadir.");
        }
    }//GEN-LAST:event_botonSaldoActionPerformed

    private boolean comprobarLimiteFecha(Date fecha) {

        Calendar fechaActual = Calendar.getInstance();
        fechaActual.set(LocalDate.now().getYear(), LocalDate.now().getMonthValue(), LocalDate.now().getDayOfMonth());
        Calendar limite = Calendar.getInstance();
        limite.setTime(fecha);

        return fechaActual.after(limite);
    }

    private void botonSuscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSuscripcionActionPerformed
        int opcionSeleccionada = 0;
        double precioSuscripcion = 0;

        //Si el usuario todavía no se ha suscrito o ya puede cambiar su suscripcion, entonces seleccionar suscripcion.
        if ((Usuario.usuarioLogueado.getSuscripcion() == null) || (!cooldownCambiarSuscripcion())) {
            switch (cbSuscripcion.getSelectedIndex()) {
                case 0:
                    precioSuscripcion = precioBasica;
                    break;

                case 1:
                    opcionSeleccionada = 1;
                    precioSuscripcion = precioEstandar;
                    break;

                case 2:
                    opcionSeleccionada = 2;
                    precioSuscripcion = precioPremium;
                    break;

            }

            //Comprobar que tenga suficiente saldo y que la tarjeta no esté caducada.
            if ((Usuario.usuarioLogueado.getTarjeta().getSaldo() - precioSuscripcion < 0)) {
                MostrarError(labelError, "Lo sentimos, su saldo es insuficiente para completar la transacción.");
            } else if ((comprobarLimiteFecha(Usuario.usuarioLogueado.getTarjeta().getFechaCaducidad()))) {
                MostrarError(labelError, "Lo sentimos, su tarjeta de crédito se encuentra caducada.");
            } else {
                MostrarError(labelError, "Se ha seleccionado el plan " + cbSuscripcion.getSelectedItem().toString() + ".");
                Usuario.usuarioLogueado.setSuscripcion(new Suscripcion(LocalDate.now(), LocalDate.now().plusDays(1), opcionSeleccionada, precioSuscripcion));
                Usuario.usuarioLogueado.getTarjeta().setSaldo(Usuario.usuarioLogueado.getTarjeta().getSaldo() - precioSuscripcion);
                GestionClientes.guardarClientes();

            }
        } else {
            MostrarError(labelError, "Podrá modificar su suscripción en " + ChronoUnit.DAYS.between(LocalDate.now(), Usuario.usuarioLogueado.getSuscripcion().getFechaFin()) + " días.");
    }//GEN-LAST:event_botonSuscripcionActionPerformed
    }

    private boolean cooldownCambiarSuscripcion() {
        Date fechaLimite;
        if (Usuario.usuarioLogueado.getSuscripcion() != null) {

            fechaLimite = Date.from(Usuario.usuarioLogueado.getSuscripcion().getFechaFin().atStartOfDay().toInstant(ZoneOffset.UTC));
        } else {
            return false;
        }

        return comprobarLimiteFecha(fechaLimite);

    }

    @Override
    public void MostrarError(JLabel label, String textoError) {
        label.setText(textoError);
        label.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSaldo;
    private javax.swing.JButton botonSuscripcion;
    private javax.swing.JComboBox<String> cbSuscripcion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelError;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTextField tfSaldo;
    // End of variables declaration//GEN-END:variables

}
