package vista.administrador;

import controlador.GestionContenido;
import controlador.GestorImagenesContenido;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import modelo.Capitulo;
import modelo.ErrorUI;
import modelo.Serie;

/**
 *
 * @author Adrián Fernández García
 */
public class OperacionesSerie extends javax.swing.JFrame implements ErrorUI {

    private final JFrame principal;
    //gestor de imágenes 
    private GestorImagenesContenido gestor = new GestorImagenesContenido();
    //lista de actores
    private final ArrayList<String> actores = new ArrayList();
    //lista de capitulos
    private final ArrayList<Capitulo> capitulos = new ArrayList();
    //lista de todos los títulos de los contenidos
    private final ArrayList<String> titulosSeries = new ArrayList();
    //archivo donde escribir la imagen de portada
    private File archivoPortada;
    //indice de modificar
    private int indice;
    //flag que determina si el contenido va a modificarse o a crearse
    private boolean modificar = false;

    /**
     * Constructor
     *
     * @param v
     */
    public OperacionesSerie(JFrame v) {
        initComponents();
        principal = v;
        principal.setVisible(false);
        this.setVisible(true);

    }

    public OperacionesSerie(JFrame v, int indice) {
        initComponents();
        principal = v;
        principal.setVisible(false);
        this.setVisible(true);
        this.indice = indice;
        modificar = true;

        //cargar los datos de la serie a modificar.
        Serie serie = (Serie) GestionContenido.contenidos.get(indice);
        tfTitulo.setText(serie.getTitulo());
        cbGenero.setSelectedItem(serie.getGenero());
        tfAnio.setText(String.valueOf(serie.getAnio()));
        taSinopsis.setText(serie.getSinopsis());
        archivoPortada = new File("imagenes/" + serie.getTitulo() + ".jpg");
        tfNumTem.setText(String.valueOf(serie.getTemporadas()));
        capitulos.addAll(serie.getCapitulos());
        actores.addAll(serie.getActores());
        listadoActores();
        listadoCapitulos();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        labelAnio = new javax.swing.JLabel();
        labelDuracion = new javax.swing.JLabel();
        labelActores = new javax.swing.JLabel();
        labelCorreo1 = new javax.swing.JLabel();
        labelCorreo = new javax.swing.JLabel();
        labelDNI = new javax.swing.JLabel();
        botonAceptar = new javax.swing.JButton();
        tfTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taSinopsis = new javax.swing.JTextArea();
        tfAnio = new javax.swing.JFormattedTextField();
        tfActores = new javax.swing.JTextField();
        tfNumTem = new javax.swing.JFormattedTextField();
        labelDirector = new javax.swing.JLabel();
        tfTituloCap = new javax.swing.JTextField();
        buttonCapitulos = new javax.swing.JButton();
        labelDirector1 = new javax.swing.JLabel();
        tfDuracionCap = new javax.swing.JFormattedTextField();
        labelPortada = new javax.swing.JLabel();
        botonImagen = new javax.swing.JButton();
        cbGenero = new javax.swing.JComboBox<>();
        botonActores = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaActores = new javax.swing.JList<>();
        botonBorrarActores = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaCapitulos = new javax.swing.JList<>();
        botonBorrarCapitulo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador_GestionSerie");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        try {
            BufferedImage imagen =ImageIO.read(new File("imagenes/logo.JPG"));
            this.setIconImage(imagen);
        } catch (IOException ex) {
          
        }

        labelAnio.setText("Año");

        labelDuracion.setText("Temporadas");

        labelActores.setText("Actores");

        labelCorreo1.setText("Sinopsis");

        labelCorreo.setText("Género");

        labelDNI.setText("Titulo");

        botonAceptar.setText("ACEPTAR");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        taSinopsis.setColumns(2);
        taSinopsis.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        taSinopsis.setLineWrap(true);
        taSinopsis.setRows(5);
        taSinopsis.setTabSize(5);
        taSinopsis.setAutoscrolls(false);
        taSinopsis.setPreferredSize(new java.awt.Dimension(100, 80));
        jScrollPane1.setViewportView(taSinopsis);

        try {
            tfAnio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfAnio.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tfNumTem.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        tfNumTem.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        labelDirector.setText("Titulo");

        buttonCapitulos.setText("AÑADIR");
        buttonCapitulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCapitulosActionPerformed(evt);
            }
        });

        labelDirector1.setText("Duración");

        try {
            tfDuracionCap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        labelPortada.setText("Portada");

        botonImagen.setText("AÑADIR IMÁGEN");
        botonImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagenActionPerformed(evt);
            }
        });

        cbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acción", "Aventuras", "Ciencia-Ficción", "Comedia", "Crimen", "Drama", "Misterio", "Suspense" }));

        botonActores.setText("AÑADIR ACTOR");
        botonActores.setPreferredSize(new java.awt.Dimension(6, 22));
        botonActores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActoresActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listaActores);

        botonBorrarActores.setText("BORRAR ACTOR");
        botonBorrarActores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActoresActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(listaCapitulos);

        botonBorrarCapitulo.setText("BORRAR");
        botonBorrarCapitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarCapituloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfAnio))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(labelDNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelCorreo1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addGap(115, 115, 115)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelPortada)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfTituloCap, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelDirector1)
                                        .addGap(24, 24, 24)
                                        .addComponent(tfDuracionCap)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(botonBorrarCapitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonCapitulos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelActores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfActores, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(botonBorrarActores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonActores, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                                .addGap(28, 28, 28))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(botonImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelDuracion)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfNumTem, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDNI)
                    .addComponent(tfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelActores)
                    .addComponent(tfActores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonActores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonBorrarActores)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCorreo)
                    .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDuracion)
                    .addComponent(tfNumTem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPortada)
                            .addComponent(botonImagen)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAnio))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCorreo1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDirector)
                    .addComponent(tfTituloCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCapitulos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDirector1)
                    .addComponent(tfDuracionCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBorrarCapitulo))
                .addGap(28, 28, 28)
                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jScrollPane1.getAccessibleContext().setAccessibleParent(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(916, 509));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        principal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * Método que comprueba que el campo de los actores no esté vacío y los
     * añade a la lista de actores.
     *
     * @param evt
     */
    private void botonActoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActoresActionPerformed
         if (!(tfActores.getText().isEmpty())) {
            if (!modificar) {
                actores.add(tfActores.getText());

            } else {
                GestionContenido.contenidos.get(indice).getActores().add(tfActores.getText());
                GestionContenido.guardarContenido();
            }
            tfActores.setText("");
            listadoActores();
        } else {
            MostrarError("El nombre del actor a añadir no puede estar vacío", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonActoresActionPerformed

    /**
     * Método que añade la imágen de portada de la serie.ç
     *
     * @see controlador.GestorImagenesContenido
     * @param evt
     */
    private void botonImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagenActionPerformed

        archivoPortada = gestor.seleccionarImagen(archivoPortada, this);
    }//GEN-LAST:event_botonImagenActionPerformed

    /**
     * Método añade los capítulos seleccionados a la lista de capítulos.
     *
     * @param evt
     */
    private void buttonCapitulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCapitulosActionPerformed

        if (!(tfTituloCap.getText().isEmpty())&&!(tfDuracionCap.getText().equals(""))) {

            if (!modificar) {
                capitulos.add(new Capitulo(tfTituloCap.getText(), Integer.parseInt(tfDuracionCap.getText())));

            } else {
                Serie s= (Serie)GestionContenido.contenidos.get(indice);
                s.getCapitulos().add(new Capitulo(tfTituloCap.getText(), Integer.parseInt(tfDuracionCap.getText())));
                GestionContenido.guardarContenido();
            }
            
            listadoCapitulos();
            //resetear los campos
            tfTituloCap.setText("");
            tfDuracionCap.setText("");

        } else {
            MostrarError("Ni el título ni la duración del capítulo pueden estar vacíos.", ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_buttonCapitulosActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        //Caso en el que alguno de los campos no ha sido rellenado.
        if ((comprobarNulo(tfTitulo.getText())) || (comprobarNulo(tfAnio.getText())) || (comprobarNulo(taSinopsis.getText())) || (comprobarNulo(labelActores.getText())) || (comprobarNulo(tfNumTem.getText())) || (comprobarNulo(tfNumTem.getText()))) {
            MostrarError("Todos los campos deben ser rellenados", ERROR_MESSAGE);
        } else if (capitulos.isEmpty()) {
            MostrarError("Se debe añadir al menos un capítulo.", ERROR_MESSAGE);
        } else if (actores.isEmpty()) {
            MostrarError("Se debe añadir al menos un actor.", ERROR_MESSAGE);
        } //Si no hay nulos ni errores de formato: crear el contenidp e introducirlo en la lista.
        else {
            Serie serieRegistrada;

            try {
                serieRegistrada = new Serie(tfTitulo.getText(), taSinopsis.getText(), cbGenero.getSelectedItem().toString(), Integer.parseInt(tfAnio.getText()),
                        actores, new ImageIcon(ImageIO.read(gestor.escalarImagen(archivoPortada, tfTitulo.getText()))), Integer.parseInt(tfNumTem.getText()), capitulos);
                 if (!modificar) {
                    GestionContenido.crearContenido(serieRegistrada);
                } else {
                    GestionContenido.modificarContenido(serieRegistrada, indice);
                    dispose();
                }
            } catch (IOException ex) {
                MostrarError("Error al guardar la serie.Inténtelo de nuevo.", ERROR_MESSAGE);
            }

            //resetear campos
            capitulos.clear();
            tfTitulo.setText("");
            taSinopsis.setText("");
            cbGenero.setSelectedIndex(0);
            tfAnio.setText("");
            tfActores.setText("");
            tfNumTem.setText("");
            actores.clear();
            capitulos.clear();
            listadoActores();
            listadoCapitulos();
    }//GEN-LAST:event_botonAceptarActionPerformed
    }
    private void botonBorrarActoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActoresActionPerformed
         if (!modificar) {
            actores.remove(listaActores.getSelectedIndex());
        } else {
            GestionContenido.contenidos.get(indice).getActores().remove(listaActores.getSelectedIndex());
            GestionContenido.guardarContenido();
        }
        listadoActores();
    }//GEN-LAST:event_botonBorrarActoresActionPerformed

    private void botonBorrarCapituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarCapituloActionPerformed
         if (!modificar) {
            capitulos.remove(listaCapitulos.getSelectedIndex());
        } else {
            Serie s= (Serie)GestionContenido.contenidos.get(indice);
            s.getCapitulos().remove(listaCapitulos.getSelectedIndex());
            GestionContenido.guardarContenido();
        }
        listadoCapitulos();
    }//GEN-LAST:event_botonBorrarCapituloActionPerformed
    
    public final void listadoActores() {

        DefaultListModel modeloLista = new DefaultListModel();

        if (!modificar) {
            modeloLista.addAll(actores);
        } else {
            modeloLista.addAll(GestionContenido.contenidos.get(indice).getActores());
        }

        listaActores.setModel(modeloLista);

    }
    
    public final void listadoCapitulos() {

        DefaultListModel modeloLista = new DefaultListModel();

        if (!modificar) {
            modeloLista.addAll(capitulos);
        } else {
            Serie s= (Serie)GestionContenido.contenidos.get(indice);
            modeloLista.addAll(s.getCapitulos());
        }

        listaCapitulos.setModel(modeloLista);

    }
    
    private boolean comprobarNulo(String cadena) {

        return cadena.equals("");
    }

    private boolean tituloRepetido(String titulo) {

        GestionContenido.contenidos.forEach(c -> {

            titulosSeries.add(c.getTitulo().toLowerCase());

        });

        return titulosSeries.contains(titulo.toLowerCase());

    }

    @Override
    public void MostrarError(String textoError, int tipoMensaje) {
        JOptionPane.showMessageDialog(this, textoError, "Error", tipoMensaje);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonActores;
    private javax.swing.JButton botonBorrarActores;
    private javax.swing.JButton botonBorrarCapitulo;
    private javax.swing.JButton botonImagen;
    private javax.swing.JButton buttonCapitulos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbGenero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelActores;
    private javax.swing.JLabel labelAnio;
    private javax.swing.JLabel labelCorreo;
    private javax.swing.JLabel labelCorreo1;
    private javax.swing.JLabel labelDNI;
    private javax.swing.JLabel labelDirector;
    private javax.swing.JLabel labelDirector1;
    private javax.swing.JLabel labelDuracion;
    private javax.swing.JLabel labelPortada;
    private javax.swing.JList<String> listaActores;
    private javax.swing.JList<String> listaCapitulos;
    private javax.swing.JTextArea taSinopsis;
    private javax.swing.JTextField tfActores;
    private javax.swing.JFormattedTextField tfAnio;
    private javax.swing.JFormattedTextField tfDuracionCap;
    private javax.swing.JFormattedTextField tfNumTem;
    private javax.swing.JTextField tfTitulo;
    private javax.swing.JTextField tfTituloCap;
    // End of variables declaration//GEN-END:variables
}